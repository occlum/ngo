[package]
name = "Occlum"
version = "0.20.0"
edition = "2018"

[lib]
name = "occlum_libos_core_rs"
crate-type = ["staticlib"]

[dependencies]
async-rt  = { path = "crates/async-rt", features = ["sgx", "thread_sleep"] }
async-io  = { path = "crates/async-io", features = ["sgx"] }
atomic = "0.5"
bitflags = "1.0"
bitvec = { version = "0.17", default-features = false, features = ["alloc"]  }
errno = { path = "crates/errno", features = ["occlum"] }
log = "0.4"
aligned = "0.3.4"
lazy_static = { version = "1.1.0", features = ["spin_no_std"] } # Implies nightly
derive_builder = "0.9"
ringbuf = { version = "0.2.3", default-features = false }
rcore-fs = { path = "../../deps/sefs/rcore-fs" }
rcore-fs-sefs = { path = "../../deps/sefs/rcore-fs-sefs" }
rcore-fs-ramfs = { path = "../../deps/sefs/rcore-fs-ramfs" }
rcore-fs-mountfs = { path = "../../deps/sefs/rcore-fs-mountfs" }
rcore-fs-unionfs = { path = "../../deps/sefs/rcore-fs-unionfs" }
rcore-fs-devfs = { path = "../../deps/sefs/rcore-fs-devfs" }
serde = { path = "../../deps/serde-sgx/serde", features = ["derive"] }
serde_json = { path = "../../deps/serde-json-sgx" }
memoffset = "0.6.1"
new-self-ref-arc = { path = "crates/new-self-ref-arc", features = ["sgx"] }
num_enum = { version = "0.5", default-features = false }
vdso-time  = { path = "crates/vdso-time", default-features = false, features = ["sgx"] }
inherit-methods-macro= { path = "crates/inherit-methods-macro" }
io-uring-callback = { path = "crates/io-uring-callback", features = ["sgx"] }
host-socket  = { path = "crates/host-socket", default-features = false, features = ["sgx"] }

[patch.'https://github.com/apache/teaclave-sgx-sdk.git']
sgx_tstd = { path = "../../deps/rust-sgx-sdk/sgx_tstd" }

[features]
default = ["integrity_only_opt", "sgx_file_cache", "sgx1_exception_sim"]
integrity_only_opt = [] # Clear bss only. It should be disabled if checking memory reads.
sgx_file_cache = []     # Cache SgxFile objects. Invalidation is unimplemented.
sgx1_exception_sim = [] # Simulate #PF and #GP exceptions on SGX 1
dcap = []               # DCAP support. The compilation relies on DCAP package.
cov = ["sgx_cov"]       # Enable coverage colletcion.

[target.'cfg(not(target_env = "sgx"))'.dependencies]
xmas-elf = { path = "../../deps/xmas-elf" }
sgx_types = { path = "../../deps/rust-sgx-sdk/sgx_types" }
sgx_tstd = { path = "../../deps/rust-sgx-sdk/sgx_tstd", features = ["backtrace"] }
sgx_trts = { path = "../../deps/rust-sgx-sdk/sgx_trts" }
sgx_tse = { path = "../../deps/rust-sgx-sdk/sgx_tse" }
sgx_tcrypto = { path = "../../deps/rust-sgx-sdk/sgx_tcrypto" }
sgx_cov = { path = "../../deps/rust-sgx-sdk/sgx_cov", optional = true }
